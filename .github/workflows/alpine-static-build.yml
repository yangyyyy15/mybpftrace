name: "Alpine Static Build"

on:
  workflow_dispatch:

jobs:
  build-alpine-static:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Generate release timestamp
      id: timestamp
      run: echo "release_time=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

    - name: Prepare build files
      run: |
        mkdir -p docker
        cp .github/workflows/scripts/build-alpine.sh docker/
        cp .github/workflows/scripts/custom-FindLLVM.cmake docker/
        cp .github/workflows/scripts/Dockerfile.alpine docker/
        chmod +x docker/build-alpine.sh

    - name: Build Docker image for ARM64 architecture
      run: |
        docker buildx build --platform linux/arm64 --load -t bpftrace-alpine-static -f docker/Dockerfile.alpine docker/

    - name: Build bpftrace static binary for ARM64
      run: |
        docker run --platform linux/arm64 --rm -v $(pwd):/bpftrace -w /bpftrace bpftrace-alpine-static

        # Check if the build was successful
        if [ -f "bpftrace-alpine-static.tar.gz" ]; then
          echo "Static build completed successfully."
        else
          echo "Static build failed - package not created."
          exit 1
        fi

    - name: Create GitHub Release
      if: success()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: bpftrace-alpine-static-${{ steps.timestamp.outputs.release_time }}
        name: BPFTrace Alpine Static Build ${{ steps.timestamp.outputs.release_time }}
        body: |
          BPFTrace for ARM64 - Fully Static Build with musl libc
          
          This is a completely static build of BPFTrace for ARM64 architecture using Alpine Linux and musl libc.
          Built on: ${{ steps.timestamp.outputs.release_time }}
          
          Unlike glibc-based static builds, this binary should work on any Linux distribution without dependencies.
        files: |
          bpftrace-alpine-static.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
